<!DOCTYPE html>
<html>
  <head>
    <!-- Setup based on following link: https://www.lewagon.com/blog/setup-meta-tags-rails -->
    <title><%= meta_title %></title>
    <meta name="description" content="<%= meta_description %>">

    <!-- Facebook Open Graph data -->
    <meta property="og:title" content="<%= meta_title %>" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="<%= request.original_url %>" />
    <meta property="og:image" content="<%= meta_image %>" />
    <meta property="og:description" content="<%= meta_description %>" />
    <meta property="og:site_name" content="<%= meta_title %>" />

    <!-- Twitter Card data -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="<%= DEFAULT_META["twitter_account"] %>">
    <meta name="twitter:title" content="<%= meta_title %>">
    <meta name="twitter:description" content="<%= meta_description %>">
    <meta name="twitter:creator" content="<%= DEFAULT_META["twitter_account"] %>">
    <meta name="twitter:image:src" content="<%= meta_image %>">

    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <!-- Favicon stuff -->
    <%= favicon_link_tag %>
    <!--      ---      -->

    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload', defer: true %>

  </head>

  <body>
    <%= render 'shared/navbar' %>
    <%= render 'shared/flashes' %>

    <%= yield %>
    <script>

      function onDragStart(event) {
        event
          .dataTransfer
          // .setData('text/plain', event.target.id);
          .setData('text/plain', event.path[2].id.replace("bullet-",""))

        event.dataTransfer.dropEffect = "move";

        // event
        //   .currentTarget
        //   .style
        //   .backgroundColor = 'yellow';

      dropzone = document.querySelector('#events-list')
      dropzone.classList.add("dropzone");
      console.log(dropzone);
      }

      function onDrag(event) {
      }

      function onDragEnter(event) {
        event.preventDefault();
        dropzone = document.querySelector('#events-list');
        dropzone.classList.add("dropzone");
        // .style.backgroundColor = "rgba(74, 74, 196, 0.418)";

      }

      function onDragOver(event) {
        event.preventDefault();

      }

      function onDragEnd(event) {
        event.preventDefault();
        console.log("DRAG END")
        dropzone = document.querySelector('#events-list');
        dropzone.classList.remove("dropzone");
      }

      function onDrop(event) {
        const id = event.dataTransfer.getData('text');
        const draggableElement = document.getElementById(`bullet-${id}`);
        const dropzone = event.target;
        let urlEvent
        if (draggableElement.baseURI.includes("bullet")) {
          urlEvent = draggableElement.baseURI.replace(/#bullet-\d+/,"events");
        } else {
          urlEvent = `${draggableElement.baseURI}events`;
        }
        const title = draggableElement[2].value;
        let dateStart;
        if (document.querySelector("#bullet_start_time").value === "" ) {
          dateStart = document.querySelector("#today").innerHTML;
        } else {
          dateStart = document.querySelector("#bullet_start_time").value;
        }
        const bulletId = event.dataTransfer.getData("text/plain");
        const token = draggableElement.parentElement.previousElementSibling.value
        fetch(urlEvent, {
          method: 'POST',
          headers: { 'Accept': "application/json", 'Content-Type': "application/json", 'X-CSRF-Token': token },
          body: JSON.stringify({ "title": title, "day_start": dateStart, "bullet_id": bulletId })
        })
          .then(response => response.json())
          .then((data) => {
            const eventList = document.querySelector("#events-list");
              eventList.insertAdjacentHTML("beforeend",
                `<div id="event-${data.id}" class="event">
                <div class="title">
                  <p id="title-content">${data.title}</p>
                </div>
                <div class="time">
                  <div class="time-from">
                  <p>${data.hour_start ? data.hour_start.strftime("%H:%M") : "--:--"} </p>
                  </div>
                </div>
              </div>`)
          })
          console.log(draggableElement);
          draggableElement.classList.add("planned");
          setTimeout(() => {  draggableElement.parentElement.remove(); }, 1000);

        event
          .dataTransfer
          .clearData();
          
      }

      const mettreLesPoints = () => {
          fetch("/eventscount/?query=01", {
          method: 'GET',
          headers: { 'Accept': "application/json", 'Content-Type': "application/json" },
        })
          .then(response => response.json())
          .then((data) => {
            data.forEach(element => {
                if (element[1] !== 0 ) {
                  let day 
                  if (element[0].slice(-2) < 10) {
                    day = element[0].slice(-1)
                  } else {
                    day = element[0].slice(-2)
                  }
                  const divachercher = `January ${day}, 2022`
                  const jouravecdespoints = document.querySelector(`[aria-label="${divachercher}"`)
                  if (element[1] === 1) {
                    jouravecdespoints.classList.add("niktarace_green");
                  } else if (element[1] <= 3) {
                    jouravecdespoints.classList.add("niktarace_orange");
                  } else { 
                    jouravecdespoints.classList.add("niktarace_red");
                  }
                }
              });
            });
          }

      window.onload = () => { mettreLesPoints() }
      const calendarTop = document.querySelector(".calendar-top")
      calendarTop.addEventListener("click", (event) => {
        mettreLesPoints();
      });
      const calendarDays = document.querySelector("#bullet_start_time")
      calendarDays.addEventListener("change", (event) => {
        mettreLesPoints();
      });
       

    </script>
  </body>
</html>
